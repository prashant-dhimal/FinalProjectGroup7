## Configuring kubernetes service accunt to Assume an IAM Role

## Configuring Bucket Policy

cat >S3BucketAccess.json <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::my-pod-secrets-bucket"
        }
    ]
}
EOF

## Creating IAM Policy

aws iam create-policy --policy-name S3Access --policy-document file://S3BucketAccess.json

## Configuring AWS Account ID to an environment variable

account_id=$(aws sts get-caller-identity --query "Account" --output text)
## Setting Cluster OIDC to an environment variable 

oidc_provider=$(aws eks describe-cluster --name clo835 --region us-east-1 --query "cluster.identity.oidc.issuer" --output text | sed -e "s/^https:\/\///")

## Seting variable for Namespace and Service Account
export namespace=final
export service_account=clo835-sa

##Creating Trust Relationship for IAM Role
cat >trust-relationship.json <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::$account_id:oidc-provider/$oidc_provider"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "$oidc_provider:aud": "sts.amazonaws.com",
          "$oidc_provider:sub": "system:serviceaccount:$namespace:$service_account"
        }
      }
    }
  ]
}
EOF

## Creating IAM Role
aws iam create-role --role-name EKSBUCKET --assume-role-policy-document file://trust-relationship.json --description "my-role-description"

##Attaching IAM Policy(S3Access) to the IAM ROle(EKSBUCKET)

aws iam attach-role-policy --role-name EKSBUCKET --policy-arn=arn:aws:iam::$account_id:policy/S3Access

## Annoting Serice Account with the IAM Role
kubectl annotate serviceaccount -n $namespace $service_account eks.amazonaws.com/role-arn=arn:aws:iam::$account_id:role/EKSBUCKET
